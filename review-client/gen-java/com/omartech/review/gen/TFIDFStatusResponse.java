/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.omartech.review.gen;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2015-7-7")
public class TFIDFStatusResponse implements org.apache.thrift.TBase<TFIDFStatusResponse, TFIDFStatusResponse._Fields>, java.io.Serializable, Cloneable, Comparable<TFIDFStatusResponse> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TFIDFStatusResponse");

  private static final org.apache.thrift.protocol.TField TOTAL_WORDS_FIELD_DESC = new org.apache.thrift.protocol.TField("totalWords", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField WORDS_POSITION_MAP_FIELD_DESC = new org.apache.thrift.protocol.TField("wordsPositionMap", org.apache.thrift.protocol.TType.MAP, (short)2);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new TFIDFStatusResponseStandardSchemeFactory());
    schemes.put(TupleScheme.class, new TFIDFStatusResponseTupleSchemeFactory());
  }

  public int totalWords; // required
  public Map<Integer,String> wordsPositionMap; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    TOTAL_WORDS((short)1, "totalWords"),
    WORDS_POSITION_MAP((short)2, "wordsPositionMap");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // TOTAL_WORDS
          return TOTAL_WORDS;
        case 2: // WORDS_POSITION_MAP
          return WORDS_POSITION_MAP;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __TOTALWORDS_ISSET_ID = 0;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.TOTAL_WORDS, new org.apache.thrift.meta_data.FieldMetaData("totalWords", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.WORDS_POSITION_MAP, new org.apache.thrift.meta_data.FieldMetaData("wordsPositionMap", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32), 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TFIDFStatusResponse.class, metaDataMap);
  }

  public TFIDFStatusResponse() {
  }

  public TFIDFStatusResponse(
    int totalWords,
    Map<Integer,String> wordsPositionMap)
  {
    this();
    this.totalWords = totalWords;
    setTotalWordsIsSet(true);
    this.wordsPositionMap = wordsPositionMap;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TFIDFStatusResponse(TFIDFStatusResponse other) {
    __isset_bitfield = other.__isset_bitfield;
    this.totalWords = other.totalWords;
    if (other.isSetWordsPositionMap()) {
      Map<Integer,String> __this__wordsPositionMap = new HashMap<Integer,String>(other.wordsPositionMap);
      this.wordsPositionMap = __this__wordsPositionMap;
    }
  }

  public TFIDFStatusResponse deepCopy() {
    return new TFIDFStatusResponse(this);
  }

  @Override
  public void clear() {
    setTotalWordsIsSet(false);
    this.totalWords = 0;
    this.wordsPositionMap = null;
  }

  public int getTotalWords() {
    return this.totalWords;
  }

  public TFIDFStatusResponse setTotalWords(int totalWords) {
    this.totalWords = totalWords;
    setTotalWordsIsSet(true);
    return this;
  }

  public void unsetTotalWords() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TOTALWORDS_ISSET_ID);
  }

  /** Returns true if field totalWords is set (has been assigned a value) and false otherwise */
  public boolean isSetTotalWords() {
    return EncodingUtils.testBit(__isset_bitfield, __TOTALWORDS_ISSET_ID);
  }

  public void setTotalWordsIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TOTALWORDS_ISSET_ID, value);
  }

  public int getWordsPositionMapSize() {
    return (this.wordsPositionMap == null) ? 0 : this.wordsPositionMap.size();
  }

  public void putToWordsPositionMap(int key, String val) {
    if (this.wordsPositionMap == null) {
      this.wordsPositionMap = new HashMap<Integer,String>();
    }
    this.wordsPositionMap.put(key, val);
  }

  public Map<Integer,String> getWordsPositionMap() {
    return this.wordsPositionMap;
  }

  public TFIDFStatusResponse setWordsPositionMap(Map<Integer,String> wordsPositionMap) {
    this.wordsPositionMap = wordsPositionMap;
    return this;
  }

  public void unsetWordsPositionMap() {
    this.wordsPositionMap = null;
  }

  /** Returns true if field wordsPositionMap is set (has been assigned a value) and false otherwise */
  public boolean isSetWordsPositionMap() {
    return this.wordsPositionMap != null;
  }

  public void setWordsPositionMapIsSet(boolean value) {
    if (!value) {
      this.wordsPositionMap = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case TOTAL_WORDS:
      if (value == null) {
        unsetTotalWords();
      } else {
        setTotalWords((Integer)value);
      }
      break;

    case WORDS_POSITION_MAP:
      if (value == null) {
        unsetWordsPositionMap();
      } else {
        setWordsPositionMap((Map<Integer,String>)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case TOTAL_WORDS:
      return Integer.valueOf(getTotalWords());

    case WORDS_POSITION_MAP:
      return getWordsPositionMap();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case TOTAL_WORDS:
      return isSetTotalWords();
    case WORDS_POSITION_MAP:
      return isSetWordsPositionMap();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof TFIDFStatusResponse)
      return this.equals((TFIDFStatusResponse)that);
    return false;
  }

  public boolean equals(TFIDFStatusResponse that) {
    if (that == null)
      return false;

    boolean this_present_totalWords = true;
    boolean that_present_totalWords = true;
    if (this_present_totalWords || that_present_totalWords) {
      if (!(this_present_totalWords && that_present_totalWords))
        return false;
      if (this.totalWords != that.totalWords)
        return false;
    }

    boolean this_present_wordsPositionMap = true && this.isSetWordsPositionMap();
    boolean that_present_wordsPositionMap = true && that.isSetWordsPositionMap();
    if (this_present_wordsPositionMap || that_present_wordsPositionMap) {
      if (!(this_present_wordsPositionMap && that_present_wordsPositionMap))
        return false;
      if (!this.wordsPositionMap.equals(that.wordsPositionMap))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_totalWords = true;
    list.add(present_totalWords);
    if (present_totalWords)
      list.add(totalWords);

    boolean present_wordsPositionMap = true && (isSetWordsPositionMap());
    list.add(present_wordsPositionMap);
    if (present_wordsPositionMap)
      list.add(wordsPositionMap);

    return list.hashCode();
  }

  @Override
  public int compareTo(TFIDFStatusResponse other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetTotalWords()).compareTo(other.isSetTotalWords());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTotalWords()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.totalWords, other.totalWords);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetWordsPositionMap()).compareTo(other.isSetWordsPositionMap());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetWordsPositionMap()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.wordsPositionMap, other.wordsPositionMap);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("TFIDFStatusResponse(");
    boolean first = true;

    sb.append("totalWords:");
    sb.append(this.totalWords);
    first = false;
    if (!first) sb.append(", ");
    sb.append("wordsPositionMap:");
    if (this.wordsPositionMap == null) {
      sb.append("null");
    } else {
      sb.append(this.wordsPositionMap);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TFIDFStatusResponseStandardSchemeFactory implements SchemeFactory {
    public TFIDFStatusResponseStandardScheme getScheme() {
      return new TFIDFStatusResponseStandardScheme();
    }
  }

  private static class TFIDFStatusResponseStandardScheme extends StandardScheme<TFIDFStatusResponse> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, TFIDFStatusResponse struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // TOTAL_WORDS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.totalWords = iprot.readI32();
              struct.setTotalWordsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // WORDS_POSITION_MAP
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map28 = iprot.readMapBegin();
                struct.wordsPositionMap = new HashMap<Integer,String>(2*_map28.size);
                int _key29;
                String _val30;
                for (int _i31 = 0; _i31 < _map28.size; ++_i31)
                {
                  _key29 = iprot.readI32();
                  _val30 = iprot.readString();
                  struct.wordsPositionMap.put(_key29, _val30);
                }
                iprot.readMapEnd();
              }
              struct.setWordsPositionMapIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, TFIDFStatusResponse struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(TOTAL_WORDS_FIELD_DESC);
      oprot.writeI32(struct.totalWords);
      oprot.writeFieldEnd();
      if (struct.wordsPositionMap != null) {
        oprot.writeFieldBegin(WORDS_POSITION_MAP_FIELD_DESC);
        {
          oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.I32, org.apache.thrift.protocol.TType.STRING, struct.wordsPositionMap.size()));
          for (Map.Entry<Integer, String> _iter32 : struct.wordsPositionMap.entrySet())
          {
            oprot.writeI32(_iter32.getKey());
            oprot.writeString(_iter32.getValue());
          }
          oprot.writeMapEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TFIDFStatusResponseTupleSchemeFactory implements SchemeFactory {
    public TFIDFStatusResponseTupleScheme getScheme() {
      return new TFIDFStatusResponseTupleScheme();
    }
  }

  private static class TFIDFStatusResponseTupleScheme extends TupleScheme<TFIDFStatusResponse> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TFIDFStatusResponse struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetTotalWords()) {
        optionals.set(0);
      }
      if (struct.isSetWordsPositionMap()) {
        optionals.set(1);
      }
      oprot.writeBitSet(optionals, 2);
      if (struct.isSetTotalWords()) {
        oprot.writeI32(struct.totalWords);
      }
      if (struct.isSetWordsPositionMap()) {
        {
          oprot.writeI32(struct.wordsPositionMap.size());
          for (Map.Entry<Integer, String> _iter33 : struct.wordsPositionMap.entrySet())
          {
            oprot.writeI32(_iter33.getKey());
            oprot.writeString(_iter33.getValue());
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TFIDFStatusResponse struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(2);
      if (incoming.get(0)) {
        struct.totalWords = iprot.readI32();
        struct.setTotalWordsIsSet(true);
      }
      if (incoming.get(1)) {
        {
          org.apache.thrift.protocol.TMap _map34 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.I32, org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.wordsPositionMap = new HashMap<Integer,String>(2*_map34.size);
          int _key35;
          String _val36;
          for (int _i37 = 0; _i37 < _map34.size; ++_i37)
          {
            _key35 = iprot.readI32();
            _val36 = iprot.readString();
            struct.wordsPositionMap.put(_key35, _val36);
          }
        }
        struct.setWordsPositionMapIsSet(true);
      }
    }
  }

}

